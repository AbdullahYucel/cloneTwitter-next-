{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YUCEL\\\\Desktop\\\\clone\\\\components\\\\modal-tweet\\\\modal-tweet.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from './modal-tweet.module.css';\nimport Photo from '../photo';\nimport IconButton from '../icon-button';\nimport { Close } from '../icons';\nimport ThemeButton from '../theme-button';\nvar layout = [];\nvar yeni = [\"HOŞGELDİNİZ\"];\n\nfunction ModalTweet(_ref) {\n  _s();\n\n  var _ref$onClick = _ref.onClick,\n      onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick;\n\n  var _useState = useState([]),\n      idea = _useState[0],\n      setIdea = _useState[1];\n\n  var onSubmit = function onSubmit(e) {\n    // layout=yeni.map((gelen,index)=> layout[index]=gelen)\n    yeni.forEach(function (e, i) {\n      layout[i] = e;\n    }); // console.log('LAYOUT', layout);\n\n    e.preventDefault();\n    layout.push(idea);\n    sessionStorage.setItem('TEXT', JSON.stringify(layout));\n    var yesyeni = sessionStorage.getItem('TEXT');\n    console.log(typeof yesyeni);\n    console.log('LO', layout);\n    onClick(false);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, __jsx(Close, {\n    className: styles.close,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }))), __jsx(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: styles.photo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(Photo, {\n    big: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), __jsx(\"textarea\", {\n    placeholder: \"What's happening ..?\",\n    rows: \"4\",\n    className: styles.text,\n    value: idea,\n    onChange: function onChange(e) {\n      setIdea(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(ThemeButton, {\n    className: styles.twit,\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(ModalTweet, \"648nu8/3/06zYNvoUTm9pKpnIds=\");\n\n_c = ModalTweet;\nexport default ModalTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTweet\");","map":{"version":3,"sources":["C:/Users/YUCEL/Desktop/clone/components/modal-tweet/modal-tweet.js"],"names":["React","useState","styles","Photo","IconButton","Close","ThemeButton","layout","yeni","ModalTweet","onClick","idea","setIdea","onSubmit","e","forEach","i","preventDefault","push","sessionStorage","setItem","JSON","stringify","yesyeni","getItem","console","log","overlay","modal","header","close","content","photo","text","target","value","footer","twit"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport styles from './modal-tweet.module.css'\r\n\r\nimport Photo from '../photo'\r\nimport IconButton from '../icon-button'\r\nimport {Close} from '../icons'\r\nimport ThemeButton from '../theme-button'\r\nvar layout= []\r\nvar yeni=[\"HOŞGELDİNİZ\"]\r\n\r\n\r\nfunction ModalTweet({onClick= () => {}}) {\r\n    const [idea,setIdea]=useState([])\r\n    \r\n    \r\n    const onSubmit= (e) => {\r\n        \r\n        // layout=yeni.map((gelen,index)=> layout[index]=gelen)\r\n        \r\n        \r\n        yeni.forEach((e,i)=> {\r\n            layout[i]=e\r\n        })\r\n        // console.log('LAYOUT', layout);\r\n        \r\n        e.preventDefault()\r\n        layout.push( idea)\r\n        sessionStorage.setItem('TEXT',JSON.stringify(layout))\r\n        var yesyeni= sessionStorage.getItem('TEXT')\r\n        console.log(typeof(yesyeni));\r\n        console.log('LO',layout);\r\n        onClick(false)\r\n        \r\n    }\r\n   \r\n    \r\n    return (\r\n        <div className={styles.overlay}> \r\n            <div className={styles.modal}>\r\n                {/* Header */}\r\n                <div className={styles.header}>\r\n                    <IconButton >\r\n                        <Close className={styles.close} onClick={onClick}/>\r\n                    </IconButton>\r\n\r\n                </div>\r\n                {/* Content */}\r\n                <div className={styles.content}>\r\n\r\n                <div className={styles.photo}>\r\n                <Photo big/>\r\n                </div>\r\n\r\n                \r\n                <textarea placeholder=\"What's happening ..?\" rows=\"4\" className={styles.text} value={idea} onChange={(e)=>{setIdea(e.target.value)}}/>\r\n                \r\n\r\n                </div>\r\n                {/* Footer */}\r\n                <div className={styles.footer}>\r\n                    <ThemeButton className={styles.twit} onClick={onSubmit}/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ModalTweet\r\n"]},"metadata":{},"sourceType":"module"}